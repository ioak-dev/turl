{"version":3,"sources":["reducers/AuthReducer.ts","reducers/ProfileReducer.ts","reducers/UserReducer.ts","reducers/CategoryReducer.ts","reducers/RequestReducer.ts","reducers/StageReducer.ts","reducers/index.ts","actions/types.ts","store.ts","oakui/OakText.tsx","oakui/icons/SendIcon.tsx","oakui/icons/IoakIcon.tsx","oakui/OakIcon.tsx","oakui/OakButton.tsx","components/Home/index.tsx","events/MessageService.ts","components/Constants.ts","actions/ProfileActions.ts","oakui/OakSpinner.tsx","components/Notification/NotificationMessage.tsx","components/Notification/index.tsx","actions/AuthActions.ts","components/Navigation/Links.tsx","events/SearchEvent.ts","oakui/SearchBar.tsx","components/Navigation/Adaptive.tsx","components/Navigation/index.tsx","components/Types/schema.ts","components/Auth/OakRouteGraph.tsx","components/App/Content.tsx","actions/UserActions.ts","components/App/index.tsx","serviceWorker.js","index.tsx","images/turl_white.svg","images/turl_black.svg"],"names":["initialState","isAuth","firstname","lastname","theme","textSize","themeColor","users","data","items","logs","combineReducers","authorization","state","action","type","console","log","payload","profile","user","category","request","stage","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","OakText","props","className","label","htmlFor","id","multiline","prefix","disabled","autoComplete","errorFields","name","value","onChange","handleChange","onFocus","handleFocus","placeholder","SendIcon","version","x","y","viewBox","enableBackground","style","dimension","transform","d","IoakIcon","fill","points","accent","width","height","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","OakIcon","getStyle","colorVar","chosenColor","color","getDimension","fontSize","size","svg","mat","fa","OakButton","useSelector","includes","variant","children","invert","small","align","onClick","icon","Home","useState","url","key","setState","event","target","subject","Subject","sendMessage","signal","next","receiveMessage","asObservable","getProfile","dispatch","setProfile","OakSpinner","NotificationMessage","notification","message","handleRemove","Notification","spinner","setSpinner","notificationList","setNotificationList","removeNotification","notificationData","filter","item","useEffect","eventBus","subscribe","localCopy","unshift","duration","setTimeout","addNotification","unsubscribe","length","slice","reverse","map","data-test","addAuth","Links","to","asset","activeClassName","searchTextChangedEvent$","BehaviorSubject","searchEvent$","SearchBar","searchText","setSearchText","searchTextChangedEventListener","method","onSubmit","preventDefault","noValidate","alt","spellCheck","autoFocus","required","xmlns","Adaptive","showSearchBar","setShowSearchBar","signin","login","transparent","src","turlBlack","turlWhite","toggleDarkMode","logout","connect","withCookies","withRouter","visible","mobilemenu","chooseTheme","showSettings","transparentNavBar","firstLoad","setData","useDispatch","setAsset","cookies","remove","history","push","toggleSettings","GET_SESSION","gql","OakRouteGraph","gqlClient","useApolloClient","runMidleware","middlewareName","readAuthenticationSpace","authenticateSpace","isAdmin","authenticate","a","redirect","match","params","cookieKey","authKey","get","query","variables","session","token","secret","firstName","lastName","email","redirectToLogin","redirectToUnauthorized","forEach","middlewares","component","themes","themecolor1","getTheme","themecolor2","themecolor3","themecolor4","createMuiTheme","palette","primary","main","secondary","getUser","addUser","httpLink","createHttpLink","uri","process","authLink","setContext","_","headers","client","ApolloClient","link","concat","cache","InMemoryCache","path","render","propsLocal","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2388725c.chunk.js","sourcesContent":["import { GET_AUTH, ADD_AUTH, REMOVE_AUTH } from '../actions/types';\n\nconst initialState = {\n  isAuth: false,\n  firstname: '',\n  lastname: '',\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_AUTH:\n      console.log('GET_AUTH reducer');\n      return {\n        ...state,\n      };\n    case ADD_AUTH:\n      console.log('ADD_AUTH reducer');\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    case REMOVE_AUTH:\n      console.log('REMOVE_AUTH reducer');\n      return {\n        ...state,\n        isAuth: false,\n        firstname: '',\n        lastname: '',\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_PROFILE, SET_PROFILE } from '../actions/types';\n\nconst initialState = {\n  theme: 'theme_dark',\n  textSize: 'textsize_medium',\n  themeColor: 'themecolor1',\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      console.log('GET_PROFILE reducer');\n      return {\n        ...state,\n      };\n    case SET_PROFILE:\n      console.log('SET_PROFILE reducer');\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_USER, ADD_USER, FETCH_ALL_USERS } from '../actions/types';\n\nconst initialState = {\n  users: [],\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_USER:\n      console.log('GET_USER reducer');\n      return {\n        ...state,\n      };\n    case ADD_USER:\n      console.log('ADD_USER reducer');\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case FETCH_ALL_USERS:\n      console.log('FETCH_ALL_USERS reducer');\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { FETCH_CATEGORY } from '../actions/types';\n\nconst initialState = {\n  data: [],\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CATEGORY:\n      console.log('FETCH_CATEGORY reducer');\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { FETCH_REQUEST } from '../actions/types';\n\nconst initialState = {\n  items: [],\n  logs: [],\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_REQUEST:\n      console.log('FETCH_REQUEST reducer');\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { FETCH_STAGE } from '../actions/types';\n\nconst initialState = {\n  data: [],\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_STAGE:\n      console.log('FETCH_STAGE reducer');\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport AuthReducer from './AuthReducer';\nimport ProfileReducer from './ProfileReducer';\nimport UserReducer from './UserReducer';\nimport CategoryReducer from './CategoryReducer';\nimport RequestReducer from './RequestReducer';\nimport StageReducer from './StageReducer';\n\nexport default combineReducers({\n  authorization: AuthReducer,\n  profile: ProfileReducer,\n  user: UserReducer,\n  category: CategoryReducer,\n  request: RequestReducer,\n  stage: StageReducer,\n});\n","export const GET_AUTH = 'GET_AUTH';\nexport const ADD_AUTH = 'ADD_AUTH';\nexport const REMOVE_AUTH = 'REMOVE_AUTH';\n\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const SET_PROFILE = 'SET_PROFILE';\n\nexport const GET_USER = 'GET_USER';\nexport const ADD_USER = 'ADD_USER';\n\nexport const FETCH_CATEGORY = 'FETCH_CATEGORY';\nexport const FETCH_REQUEST = 'FETCH_REQUEST';\nexport const FETCH_STAGE = 'FETCH_STAGE';\nexport const FETCH_ALL_USERS = 'FETCH_ALL_USERS';\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware) // ,\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport './styles/oak-text-neu.scss';\n\ninterface Props {\n  label?: string;\n  id: string;\n  data: any;\n  type?: string;\n  handleChange: any;\n  errorFields?: any;\n  disabled?: boolean;\n  rows?: number;\n  multiline?: boolean;\n  handleFocus?: Function;\n  placeholder?: string;\n  prefix?: string;\n}\nconst OakText = (props: Props) => {\n  const handleFocus = () => {\n    if (props.handleFocus) {\n      props.handleFocus();\n    }\n  };\n  return (\n    <div className=\"oak-text\">\n      {props.label && <label htmlFor={props.id}>{props.label}</label>}\n      {!props.multiline && (\n        <div className=\"oak-text--container\">\n          <div className=\"oak-text--container--prefix\">{props.prefix}</div>\n          <input\n            disabled={props.disabled}\n            autoComplete=\"off\"\n            className={\n              (props.errorFields && props.errorFields[props.id]\n                ? 'error'\n                : '') + (props.disabled ? ' disabled' : '')\n            }\n            type={props.type ? props.type : 'text'}\n            name={props.id}\n            id={props.id}\n            value={props.data[props.id]}\n            onChange={props.handleChange}\n            onFocus={handleFocus}\n            placeholder={props.placeholder}\n          />\n        </div>\n      )}\n      {/* rows={props.rows ? props.rows : 4} */}\n      {props.multiline && (\n        <textarea\n          disabled={props.disabled}\n          className={\n            (props.errorFields && props.errorFields[props.id] ? 'error' : '') +\n            (props.disabled ? ' disabled' : '')\n          }\n          id={props.id}\n          name={props.id}\n          value={props.data[props.id]}\n          onChange={props.handleChange}\n        />\n      )}\n      {/* {props.multiline && <div contentEditable={props.disabled ? false : true} suppressContentEditableWarning={true}\n                className={\"textarea \" + (props.errorFields && props.errorFields[props.id] ? \"error\" : \"\") + (props.disabled ? \" disabled\" : \"\")}\n                onBlur={handleChange}>{props.data[props.id]}</div>} */}\n    </div>\n  );\n};\n\nexport default OakText;\n","import React from 'react';\n\ninterface Props {\n  style: object;\n  accent: object;\n  dimension: object;\n}\nconst SendIcon = (props: Props) => {\n  return (\n    <svg\n      version=\"1.0\"\n      id=\"Layer_1\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 57 56\"\n      enableBackground=\"new 0 0 57 56\"\n      style={props.dimension}\n    >\n      <g id=\"Chat-Fenster\">\n        <g\n          id=\"chat_FAQ_Accordion2-Copy-13\"\n          transform=\"translate(-1364.000000, -1001.000000)\"\n        >\n          <g id=\"Send-Message\" transform=\"translate(397.000000, 1008.000000)\">\n            <g id=\"Send-Button\" transform=\"translate(990.000000, 10.000000)\">\n              <g id=\"Send_1_\">\n                <path\n                  style={props.style}\n                  d=\"M16,0.5c-0.1-0.1-0.3-0.1-0.4-0.1L-7,10.8c-0.1,0.1-0.2,0.2-0.2,0.3s0.1,0.3,0.2,0.3l6.4,3.1\n\t\t\t\t\t\tc0.1,0.1,0.3,0,0.4,0L6,9.9l-4.9,4.9C1,14.9,1,15,1,15.1l0.5,6.2c0,0.1,0.1,0.3,0.2,0.3h0.1c0.1,0,0.2,0,0.3-0.1l3.4-3.9l4.2,2\n\t\t\t\t\t\tc0.1,0,0.2,0,0.3,0s0.2-0.1,0.2-0.2l5.9-18.6C16.1,0.7,16.1,0.6,16,0.5z\"\n                />\n              </g>\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport default SendIcon;\n","import React from 'react';\n\ninterface Props {\n  style: object;\n  accent: object;\n  dimension: object;\n}\nconst IoakIcon = (props: Props) => {\n  return (\n    <svg viewBox=\"0 0 73 73\" style={props.dimension}>\n      <polygon\n        fill=\"#27AAE1\"\n        points=\"38.5,-3.8 37.9,-3.8 37.9,-3.8 38.5,-3.8 \"\n      />\n      <g>\n        <path\n          fill=\"#149ED9\"\n          d=\"M27.6,23c2.6-1.8,5.8-2.9,9.3-2.9c3.4,0,6.6,1.1,9.3,2.9l6.3-7.5c-4.3-3.2-9.7-5.2-15.6-5.2\n\t\tc-5.8,0-11.2,1.9-15.6,5.2L27.6,23z\"\n          style={props.accent}\n        />\n        <rect x=\"32\" y=\"37.4\" width=\"9.8\" height=\"25.6\" style={props.style} />\n        <circle\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth=\"9.75\"\n          strokeMiterlimit=\"10\"\n          cx=\"36.9\"\n          cy=\"36.5\"\n          r=\"30.9\"\n          style={{ ...props.style, fill: 'none' }}\n        />\n        <polygon\n          fill=\"#27AAE1\"\n          points=\"37.2,-3.9 36.6,-3.9 36.6,-3.9 37.2,-3.9 \t\"\n        />\n        <circle cx=\"36.9\" cy=\"32.8\" r=\"7.8\" style={props.style} />\n      </g>\n    </svg>\n  );\n};\n\nexport default IoakIcon;\n","import React from 'react';\nimport './styles/oak-icon.scss';\nimport SendIcon from './icons/SendIcon';\nimport IoakIcon from './icons/IoakIcon';\n\ninterface Props {\n  // pass either mat or svg or fa\n  // mat for material icon names\n  mat?: string;\n  // svg for custom svg icon names\n  svg?: string;\n  fa?: string;\n  size?: string;\n  color?: string; // theme names and actual color codes or names or variables\n  accent?: string;\n}\nconst OakIcon = (props: Props) => {\n  const getStyle = colorVar => {\n    const style: any = {};\n    let chosenColor = '';\n    switch (colorVar) {\n      case 'primary':\n        chosenColor = 'var(--color-primary-1)';\n        break;\n      case 'secondary':\n        chosenColor = 'var(--color-secondary-1)';\n        break;\n      case 'tertiary':\n        chosenColor = 'var(--color-tertiary-1)';\n        break;\n      case 'success':\n        chosenColor = 'var(--color-success)';\n        break;\n      case 'failure':\n        chosenColor = 'var(--color-failure)';\n        break;\n      case 'warning':\n        chosenColor = 'var(--color-warning)';\n        break;\n      default:\n        chosenColor = colorVar || 'var(--color-foreground-1)';\n    }\n    style.fill = chosenColor;\n    style.color = chosenColor;\n    style.stroke = chosenColor;\n    return style;\n  };\n  const getDimension = () => {\n    const dimension: any = {};\n    dimension.fontSize = props.size ? props.size : '24px';\n    if (props.svg) {\n      dimension.height = props.size ? props.size : '24px';\n      dimension.width = 'auto';\n    }\n    return dimension;\n  };\n  return (\n    <div className=\"oak-icon\">\n      {props.mat && (\n        <i\n          className=\"material-icons\"\n          style={{ ...getStyle(props.color), ...getDimension() }}\n        >\n          {props.mat}\n        </i>\n      )}\n      {props.fa && (\n        <i\n          className={`fontawesome-icons ${props.fa}`}\n          style={{ ...getStyle(props.color), ...getDimension() }}\n        >\n          {props.mat}\n        </i>\n      )}\n      {props.svg && props.svg === 'send' && (\n        <SendIcon\n          style={getStyle(props.color)}\n          accent={props.accent && getStyle(props.accent)}\n          dimension={getDimension()}\n        />\n      )}\n      {props.svg && props.svg === 'ioak' && (\n        <IoakIcon\n          style={getStyle(props.color)}\n          accent={props.accent && getStyle(props.accent)}\n          dimension={getDimension()}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default OakIcon;\n","import React, { ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport './styles/oak-button-neu.scss';\nimport OakIcon from './OakIcon';\n\ninterface Props {\n  icon?: string; // points to \"mat\" material icon\n  fa?: string;\n  svg?: string;\n  action?: any;\n  variant?:\n    | 'block'\n    | 'outline'\n    | 'appear'\n    | 'disappear'\n    | 'regular'\n    | 'disabled'\n    | 'drama';\n  theme?: 'primary' | 'secondary' | 'tertiary' | 'default';\n  align?: 'left' | 'right' | 'center';\n  small?: boolean;\n  invert?: boolean;\n  children?: ReactNode;\n  type?: 'button' | 'submit';\n}\n\nconst OakButton = (props: Props) => {\n  const profile = useSelector(state => state.profile);\n  const getStyle = () => {\n    let style = props.theme ? props.theme : '';\n    style += profile?.theme?.includes('theme_light') ? ' light' : '';\n    style += props.variant ? ` ${props.variant}` : '';\n\n    if (!props.children) {\n      style += ' icon';\n    }\n\n    style += props.invert ? ' invert' : '';\n\n    style += props.small ? ' small' : '';\n\n    style += props.align ? ` align-${props.align}` : '';\n\n    return style;\n  };\n\n  return (\n    // eslint-disable-next-line react/button-has-type\n    <button className={`oak-button ${getStyle()}`} onClick={props.action}>\n      <div className=\"button-label-container\">\n        {props.icon && <OakIcon mat={props.icon} size=\"1.2em\" />}\n        {props.fa && <OakIcon fa={props.fa} size=\"1.2em\" />}\n        {props.svg && <OakIcon svg={props.svg} size=\"1.2em\" />}\n        {props.children && props.children}\n      </div>\n    </button>\n  );\n};\n\nexport default OakButton;\n","import React, { useState } from 'react';\nimport OakText from '../../oakui/OakText';\nimport './style.scss';\nimport OakButton from '../../oakui/OakButton';\n\ninterface Props {\n  setProfile: Function;\n  profile: any;\n  match: any;\n  history: any;\n}\n\nconst Home = (props: Props) => {\n  const [state, setState] = useState({\n    url: '',\n    key: '',\n  });\n\n  const handleChange = event => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"home-page--container\">\n        <form>\n          <div className=\"neu-card home-page--container--form\">\n            <OakText\n              data={state}\n              id=\"url\"\n              handleChange={handleChange}\n              label=\"Source URL\"\n            />\n            <OakText\n              data={state}\n              id=\"key\"\n              prefix=\"https://ioak.tk/\"\n              handleChange={handleChange}\n              label=\"Generated URL\"\n            />\n            <div className=\"footer-actions\">\n              <OakButton theme=\"default\" variant=\"regular\">\n                Generate\n              </OakButton>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { Subject, Observable } from 'rxjs';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Message } from '../components/Types/GeneralTypes';\n\nconst subject = new Subject<Message>();\n\nexport function sendMessage(name: string, signal = true, data?: {}) {\n  subject.next({\n    name,\n    signal,\n    data,\n  });\n}\n\nexport function clearMessages() {\n  subject.next();\n}\n\nexport function receiveMessage(): Observable<Message> {\n  return subject.asObservable();\n}\n\nexport function newMessageId() {\n  return Math.random();\n}\n\nexport function newId() {\n  return uuidv4();\n}\n\nexport function httpHandleRequest(\n  messageId: any,\n  action: string,\n  reference: string\n) {\n  sendMessage('notification', true, {\n    id: messageId,\n    type: 'running',\n    message: `${action} ${reference ? `(${reference})` : ''} - In progress`,\n  });\n}\n\nexport function httpHandleResponse(\n  messageId: any,\n  response: any,\n  action: string,\n  reference: string\n) {\n  if (response.status === 200) {\n    sendMessage('notification', true, {\n      id: messageId,\n      type: 'success',\n      message: `${action} ${reference ? `(${reference})` : ''} - Success`,\n      duration: 3000,\n    });\n    return { outcome: true };\n  }\n  sendMessage('notification', true, {\n    id: messageId,\n    type: 'failure',\n    message: `${action} ${\n      reference ? `(${reference})` : ''\n    } - Failed with error ${response.status}`,\n    duration: 3000,\n  });\n  return { outcome: false };\n}\n\nexport function httpHandleResponseSilent(response: any) {\n  if (response.status === 200) {\n    return { outcome: true, response };\n  }\n  return { outcome: false, response };\n}\n\nexport function httpHandleError(\n  messageId: any,\n  error: any,\n  action: string,\n  reference: string\n) {\n  sendMessage('notification', true, {\n    id: messageId,\n    type: 'failure',\n    message: `${action} ${\n      reference ? `(${reference})` : ''\n    } - Failed with ${error}`,\n  });\n  return { outcome: false };\n}\n\nexport function httpHandleErrorSilent(error: any) {\n  return { outcome: false, response: error };\n}\n","const constants = {\n  API_URL_TENANT: '/tenant',\n  API_URL_TENANT_BANNER: '/tenant/banner',\n  API_URL_TENANT_CREATE: '/tenant/create',\n  API_TENANT_URL: '/tenant/sendURL',\n\n  API_URL_PRESIGNUP: '/auth/keys',\n  API_URL_RESET: '/auth/reset',\n  API_URL_CODE: '/auth/sendResetCode',\n  API_URL_USER_DETAILS: '/user/details',\n\n  API_URL_STAGE: '/stage',\n  API_URL_PREDICT: '/model/predict',\n\n  API_URL_CATEGORY: '/category',\n  API_URL_FAQ: '/faq',\n  API_URL_SR: '/servicerequests',\n  API_URL_USER: '/user',\n  API_URL: '/auth/',\n  API_SIGNIN: '/signin',\n  API_SIGNUP: '/signup',\n  API_KEYS: '/keys',\n  API_JWT: '/signin/jwt',\n};\n\nexport default constants;\n","import { GET_PROFILE, SET_PROFILE } from './types';\n\nexport const getProfile = () => dispatch => {\n  dispatch({\n    type: GET_PROFILE,\n  });\n};\n\nexport const setProfile = payload => dispatch => {\n  dispatch({\n    type: SET_PROFILE,\n    payload,\n  });\n};\n","import React from 'react';\nimport './styles/oak-spinner.scss';\n\nconst OakSpinner = () => {\n  return (\n    <div>\n      <div className=\"oak-spinner\">\n        <div className=\"spinner-wrapper\">\n          <span />\n          <span />\n          <span />\n          <span />\n          <span />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OakSpinner;\n","import React from 'react';\nimport './style.scss';\n\ninterface Props {\n  notification: any;\n  handleRemove: any;\n}\n\nconst NotificationMessage = (props: Props) => {\n  return (\n    <div className={`message ${props.notification.type}`}>\n      {props.notification.type === 'running' && (\n        <div\n          className={`message-icon ${\n            props.notification.type === 'running' ? 'running' : ''\n          }`}\n        >\n          <i className=\"material-icons\">rotate_right</i>\n        </div>\n      )}\n      {props.notification.type === 'success' && (\n        <div className=\"message-icon\">\n          <i className=\"material-icons\">check_circle_outline</i>\n        </div>\n      )}\n      {props.notification.type === 'warning' && (\n        <div className=\"message-icon\">\n          <i className=\"material-icons\">warning</i>\n        </div>\n      )}\n      {props.notification.type === 'failure' && (\n        <div className=\"message-icon\">\n          <i className=\"material-icons\">error_outline</i>\n        </div>\n      )}\n      <div className=\"message-text\">{props.notification?.message}</div>\n      <div className=\"message-action\">\n        <i className=\"material-icons\" onClick={props.handleRemove}>\n          clear\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationMessage;\n","import React, { useState, useEffect } from 'react';\nimport './style.scss';\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\nimport OakSpinner from '../../oakui/OakSpinner';\nimport NotificationMessage from './NotificationMessage';\n\nconst Notification = () => {\n  const [spinner, setSpinner] = useState(false);\n  const [notificationList, setNotificationList] = useState<any | undefined>([]);\n  const [data, setData] = useState<any>({ notificationList: [] });\n\n  const removeNotification = notificationData => {\n    setNotificationList(\n      notificationList.filter(item => {\n        return item.id !== notificationData.id;\n      })\n    );\n  };\n  const addNotification = notificationData => {\n    const localCopy = [...notificationList];\n    localCopy.unshift(notificationData);\n    // setNotificationList([notificationData].concat(notificationList));\n    setNotificationList(localCopy);\n    // console.log(localCopy);\n    if (notificationData.duration) {\n      setTimeout(() => {\n        removeNotification(notificationData);\n      }, notificationData.duration);\n    } else if (!notificationData.id) {\n      setTimeout(() => {\n        removeNotification(notificationData);\n      }, 5000);\n    }\n    // console.log(notificationList.splice(0, 100));\n  };\n\n  useEffect(() => {\n    const eventBus = receiveMessage().subscribe(message => {\n      if (message.name === 'notification') {\n        if (!message.signal) {\n          removeNotification(message.data);\n        } else {\n          removeNotification(message.data);\n          addNotification(message.data);\n          // turn off spinner when a notification arrives\n          setSpinner(false);\n\n          // if (message.data && message.data.duration) {\n          //   setTimeout(() => {\n          //     sendMessage('notification', false);\n          //   }, message.data.duration);\n          // }\n        }\n      }\n\n      if (message.name === 'spinner') {\n        setSpinner(message.signal);\n      }\n    });\n    return () => eventBus.unsubscribe();\n  }, []);\n\n  return (\n    <>\n      {notificationList && notificationList.length > 0 && (\n        <div className=\"notification\">\n          {notificationList\n            .slice(0, 5)\n            .reverse()\n            .map(notification => (\n              <div key={notification.id || notification.message}>\n                <NotificationMessage\n                  notification={notification}\n                  handleRemove={removeNotification}\n                />\n              </div>\n            ))}\n        </div>\n      )}\n      {/* {spinner && <div data-test=\"spinner\" className=\"lds-dual-ring\" />} */}\n      {spinner && <OakSpinner data-test=\"spinner\" />}\n    </>\n  );\n};\n\nexport default Notification;\n","import { GET_AUTH, REMOVE_AUTH, ADD_AUTH } from './types';\n\nexport const getAuth = () => dispatch => {\n  dispatch({\n    type: GET_AUTH,\n  });\n};\n\nexport const addAuth = data => dispatch => {\n  dispatch({\n    type: ADD_AUTH,\n    payload: data,\n  });\n};\n\nexport const removeAuth = () => dispatch => {\n  dispatch({\n    type: REMOVE_AUTH,\n  });\n};\n","import React from 'react';\n\nimport './style.scss';\nimport { NavLink } from 'react-router-dom';\nimport { Authorization } from '../Types/GeneralTypes';\n\ninterface Props {\n  authorization: Authorization;\n  asset: string;\n}\n\nconst Links = (props: Props) => {\n  return (\n    <div className=\"links\">\n      {props.authorization.isAuth && (\n        <>\n          <NavLink\n            to={`/${props.asset}/home`}\n            className=\"navitem\"\n            activeClassName=\"active\"\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to={`/${props.asset}/article`}\n            className=\"navitem\"\n            activeClassName=\"active\"\n          >\n            Articles\n          </NavLink>\n          <NavLink\n            to={`/${props.asset}/post`}\n            className=\"navitem\"\n            activeClassName=\"active\"\n          >\n            Forum\n          </NavLink>\n\n          <NavLink\n            to={`/${props.asset}/asset/view`}\n            className=\"navitem\"\n            activeClassName=\"active\"\n          >\n            Asset\n          </NavLink>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Links;\n","import { BehaviorSubject, Subject } from 'rxjs';\n\nexport const searchTextChangedEvent$ = new BehaviorSubject<string>('');\nexport const searchEvent$ = new Subject<string>();\n","import React, { useEffect, useState } from 'react';\nimport './SearchBar.scss';\nimport { searchTextChangedEvent$, searchEvent$ } from '../events/SearchEvent';\n\ninterface Props {\n  alt?: boolean;\n}\n\nconst SearchBar = (props: Props) => {\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    const searchTextChangedEventListener = searchTextChangedEvent$.subscribe(\n      data => {\n        setSearchText(data);\n      }\n    );\n    return () => searchTextChangedEventListener.unsubscribe();\n  }, []);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    searchEvent$.next(searchText);\n  };\n\n  const handleChange = event => {\n    searchTextChangedEvent$.next(event.target.value);\n  };\n\n  return (\n    <form method=\"GET\" onSubmit={onSubmit} noValidate>\n      <div className={`search-bar${props.alt ? ' alt' : ''}`}>\n        <input\n          name=\"searchText\"\n          spellCheck={false}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Turl, turl, on the wall, who's the fairest of them all?\"\n          required\n          value={searchText}\n          onChange={handleChange}\n        />\n        <button className=\"icon\">\n          <i>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n            </svg>\n          </i>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport './style.scss';\nimport turlWhite from '../../images/turl_white.svg';\nimport turlBlack from '../../images/turl_black.svg';\nimport Links from './Links';\nimport { Authorization, Profile } from '../Types/GeneralTypes';\n// import SearchBar from '../Ux/SearchBar';\nimport { receiveMessage } from '../../events/MessageService';\nimport SearchBar from '../../oakui/SearchBar';\nimport OakButton from '../../oakui/OakButton';\n\ninterface Props {\n  sendEvent: Function;\n  getAuth: Function;\n  addAuth: Function;\n  removeAuth: Function;\n  getProfile: Function;\n  toggleDarkMode: Function;\n  profile: Profile;\n  asset: string;\n  login: Function;\n  transparent: boolean;\n  logout: Function;\n  toggleSettings: any;\n}\n\nconst Adaptive = (props: Props) => {\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const authorization = useSelector(state => state.authorization);\n\n  useEffect(() => {\n    props.getProfile();\n  }, []);\n\n  useEffect(() => {\n    receiveMessage().subscribe(message => {\n      if (message.name === 'show-navbar-element') {\n        setShowSearchBar(message.signal);\n      }\n    });\n  }, []);\n\n  const signin = type => {\n    props.login(type);\n  };\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"left\">\n        {!props.transparent && props.profile.theme === 'theme_light' && (\n          <img className=\"logo\" src={turlBlack} alt=\"Turl logo\" />\n        )}\n        {(props.transparent || props.profile.theme === 'theme_dark') && (\n          <img className=\"logo\" src={turlWhite} alt=\"Turl logo\" />\n        )}\n        <Links authorization={authorization} asset={props.asset} />\n        {showSearchBar && <SearchBar alt />}\n      </div>\n      <div className=\"right\">\n        <div className=\"dark-mode\">\n          <OakButton\n            theme=\"default\"\n            variant=\"regular\"\n            action={props.toggleDarkMode}\n            icon=\"brightness_6\"\n          />\n        </div>\n        <div className=\"action\">\n          {authorization.isAuth && props.asset && (\n            <OakButton\n              theme=\"primary\"\n              variant=\"disappear\"\n              action={props.logout}\n            >\n              <i className=\"material-icons\">power_settings_new</i>Logout\n            </OakButton>\n          )}\n          {!authorization.isAuth && props.asset && (\n            <OakButton\n              theme=\"primary\"\n              variant=\"appear\"\n              align=\"left\"\n              small\n              action={() => signin('signin')}\n            >\n              <i className=\"material-icons\">person</i>Login\n            </OakButton>\n          )}\n          {!authorization.isAuth && props.asset && (\n            <OakButton\n              theme=\"primary\"\n              variant=\"appear\"\n              align=\"right\"\n              small\n              action={() => signin('signup')}\n            >\n              <i className=\"material-icons\">person_add</i>Signup\n            </OakButton>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Adaptive;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, connect, useDispatch } from 'react-redux';\n\nimport { withRouter } from 'react-router';\nimport { withCookies } from 'react-cookie';\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\n\nimport './style.scss';\n\nimport { Profile } from '../Types/GeneralTypes';\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\nimport { removeAuth } from '../../actions/AuthActions';\nimport Adaptive from './Adaptive';\n\ninterface Props {\n  sendEvent: Function;\n  getAuth: Function;\n  addAuth: Function;\n  removeAuth: Function;\n  getProfile: Function;\n  setProfile: Function;\n  profile: Profile;\n  login: Function;\n  transparent: boolean;\n  toggleSettings: any;\n  history: any;\n  cookies: any;\n  location: any;\n  match: any;\n}\n\nconst Navigation = (props: Props) => {\n  const [data, setData] = useState({\n    visible: false,\n    mobilemenu: 'hide',\n    chooseTheme: false,\n    showSettings: false,\n    transparentNavBar: false,\n    firstLoad: true,\n  });\n\n  const authorization = useSelector(state => state.authorization);\n\n  const dispatch = useDispatch();\n\n  const [asset, setAsset] = useState('');\n\n  useEffect(() => {\n    receiveMessage().subscribe(event => {\n      if (event.name === 'spaceChange') {\n        setAsset(event.data);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    props.getProfile();\n  }, []);\n\n  useEffect(() => {\n    receiveMessage().subscribe(message => {\n      if (message.name === 'navbar-transparency') {\n        setData({ ...data, transparentNavBar: message.signal });\n      }\n      if (message.name === 'loggedin') {\n        // props.reloadProfile(nextProps.authorization);\n        setData({ ...data, firstLoad: false });\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (data.firstLoad && authorization && authorization.isAuth) {\n      setData({ ...data, firstLoad: false });\n    }\n  }, [authorization.isAuth]);\n\n  const logout = (\n    event: any,\n    type = 'success',\n    message = 'You have been logged out'\n  ) => {\n    dispatch(removeAuth());\n    props.cookies.remove(`turl_${asset}`);\n    sendMessage('notification', true, {\n      type,\n      message,\n      duration: 3000,\n    });\n  };\n\n  const toggleDarkMode = () => {\n    if (props.profile.theme === 'theme_dark') {\n      props.setProfile({\n        ...props.profile,\n        theme: 'theme_light',\n      });\n    } else {\n      props.setProfile({\n        ...props.profile,\n        theme: 'theme_dark',\n      });\n    }\n  };\n\n  const login = type => {\n    props.history.push(`/${asset}/login/home`);\n    // window.location.href = `${process.env.REACT_APP_ONEAUTH_URL}/#/space/${asset}/login?type=${type}&appId=${process.env.REACT_APP_ONEAUTH_APP_ID}`;\n  };\n\n  const toggleSettings = () => {\n    setData({ ...data, showSettings: !data.showSettings });\n  };\n\n  return (\n    <div className=\"nav\">\n      <Adaptive\n        {...props}\n        logout={logout}\n        login={login}\n        asset={asset}\n        toggleSettings={toggleSettings}\n        transparent={data.transparentNavBar}\n        toggleDarkMode={toggleDarkMode}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfile, setProfile })(\n  withCookies(withRouter(Navigation))\n);\n","import gql from 'graphql-tag';\n\nexport const GET_SESSION = gql`\n  query Session($key: ID!, $asset: String) {\n    session(key: $key, asset: $asset) {\n      id\n      firstName\n      lastName\n      email\n      token\n    }\n  }\n`;\n\nexport const NEW_EMAIL_SESSION = gql`\n  query NewEmailSession($email: String!) {\n    newEmailSession(email: $email) {\n      sessionId\n    }\n  }\n`;\n\nexport const NEW_EXTERN_SESSION = gql`\n  query NewExternSession($token: String!, $asset: String) {\n    newExternSession(token: $token, asset: $asset) {\n      sessionId\n    }\n  }\n`;\n\nexport const CREATE_EMAIL_ACCOUNT = gql`\n  mutation CreateEmailAccount($payload: UserPayload) {\n    createEmailAccount(payload: $payload) {\n      id\n      email\n    }\n  }\n`;\n\nexport const LIST_ASSETS = gql`\n  query Assets {\n    assets {\n      id\n      name\n      description\n      jwtPassword\n      productionMode\n      assetId\n    }\n  }\n`;\n\nexport const GET_ASSET = gql`\n  query Asset($assetId: String!) {\n    asset(assetId: $assetId) {\n      id\n      name\n      description\n      jwtPassword\n      productionMode\n      assetId\n    }\n  }\n`;\n\nexport const CREATE_ASSET = gql`\n  mutation CreateAsset(\n    $payload: AssetPayload!\n    $addition: AssetAdditionPayload!\n  ) {\n    createAsset(payload: $payload, addition: $addition) {\n      id\n      name\n      description\n      jwtPassword\n      productionMode\n      assetId\n    }\n  }\n`;\n\nexport const UPDATE_ASSET = gql`\n  mutation UpdateAsset($payload: AssetPayload!) {\n    updateAsset(payload: $payload) {\n      id\n      name\n      description\n      jwtPassword\n      productionMode\n      assetId\n    }\n  }\n`;\n\nexport const USERS = gql`\n  query Users {\n    users {\n      id\n      firstName\n      lastName\n    }\n  }\n`;\n","import React from 'react';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addAuth } from '../../actions/AuthActions';\nimport { Authorization } from '../Types/GeneralTypes';\nimport { sendMessage } from '../../events/MessageService';\nimport { GET_SESSION } from '../Types/schema';\n\ninterface Props {\n  authorization: Authorization;\n  path?: string;\n  render?: any;\n  component: any;\n  match: any;\n  history: any;\n  middleware?: string[];\n  cookies: any;\n}\n\nconst OakRouteGraph = (props: Props) => {\n  const gqlClient = useApolloClient();\n  const authorization = useSelector(state => state.authorization);\n  const profile = useSelector(state => state.profile);\n  const dispatch = useDispatch();\n\n  const middlewares = () => {\n    props.middleware?.forEach(middlewareName => {\n      if (!runMidleware(middlewareName)) {\n        return false;\n      }\n    });\n    return true;\n  };\n\n  const runMidleware = middlewareName => {\n    sendMessage('spaceChange', true, '');\n    switch (middlewareName) {\n      case 'readAuthentication':\n        return readAuthenticationSpace();\n      case 'authenticate':\n        return authenticateSpace();\n      case 'isAdmin':\n        return isAdmin();\n      default:\n        return true;\n    }\n  };\n\n  const authenticateSpace = () => {\n    return authenticate('asset');\n  };\n  const readAuthenticationSpace = () => {\n    return authenticate('asset', false);\n  };\n\n  const authenticate = async (type, redirect = true) => {\n    sendMessage('spaceChange', true, props.match.params.asset);\n    if (authorization.isAuth) {\n      return true;\n    }\n    const cookieKey = `turl_${props.match.params.asset}`;\n    const authKey = props.cookies.get(cookieKey);\n    const baseAuthUrl = `/auth/${props.match.params.asset}`;\n    if (authKey) {\n      const { data } = await gqlClient.query({\n        query: GET_SESSION,\n        variables: { key: authKey, asset: props.match.params.asset },\n      });\n\n      if (data?.session) {\n        dispatch(\n          addAuth({\n            isAuth: true,\n            token: data.session.token,\n            secret: '',\n            firstName: data.session.firstName,\n            lastName: data.session.lastName,\n            email: data.session.email,\n            id: data.session.id,\n          })\n        );\n      } else {\n        props.cookies.remove(cookieKey);\n        if (redirect) {\n          sendMessage('notification', true, {\n            type: 'failure',\n            message: 'Invalid session token',\n            duration: 3000,\n          });\n          redirectToLogin(props.match.params.asset);\n        }\n      }\n    } else if (redirect) {\n      redirectToLogin(props.match.params.asset);\n    } else {\n      return true;\n    }\n  };\n\n  const isAdmin = () => {\n    redirectToUnauthorized();\n    return false;\n  };\n\n  const redirectToLogin = asset => {\n    // window.location.href = `${process.env.REACT_APP_ONEAUTH_URL}/#/space/${spaceId}/login?type=signin&appId=${process.env.REACT_APP_ONEAUTH_APP_ID}`;\n    props.history.push(`/${asset}/login/home`);\n  };\n\n  const redirectToUnauthorized = () => {\n    props.history.push(`/${profile.asset}/unauthorized`);\n  };\n\n  return (\n    <>\n      {middlewares() && (\n        <props.component\n          {...props}\n          profile={profile}\n          asset={props.match.params.asset}\n          // getProfile={getProfile}\n          // setProfile={props.setProfile}\n        />\n      )}\n    </>\n  );\n};\n\nexport default OakRouteGraph;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, connect } from 'react-redux';\n\nimport { InMemoryCache } from 'apollo-boost';\nimport ApolloClient from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Route } from 'react-router-dom';\nimport './style.scss';\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport { withCookies } from 'react-cookie';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Home from '../Home';\nimport { getUser, addUser } from '../../actions/UserActions';\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\n\nimport Notification from '../Notification';\nimport Navigation from '../Navigation';\nimport { Authorization } from '../Types/GeneralTypes';\nimport OakRouteGraph from '../Auth/OakRouteGraph';\nimport { receiveMessage } from '../../events/MessageService';\n\nconst themes = {\n  themecolor1: getTheme('#69A7BF'),\n  themecolor2: getTheme('#99587B'),\n  themecolor3: getTheme('#A66C26'),\n  themecolor4: getTheme('#37AE82'),\n};\n\nfunction getTheme(color: string) {\n  return createMuiTheme({\n    palette: {\n      primary: {\n        main: color,\n      },\n      secondary: {\n        main: color,\n      },\n    },\n  });\n}\n\ninterface Props {\n  getProfile: Function;\n  setProfile: Function;\n  getAuth: Function;\n  addAuth: Function;\n  removeAuth: Function;\n  getUser: Function;\n  addUser: Function;\n  cookies: any;\n\n  // event: PropTypes.object,\n  profile: any;\n  authorization: Authorization;\n}\n\nconst Content = (props: Props) => {\n  const authorization = useSelector(state => state.authorization);\n  const [asset, setAsset] = useState('');\n\n  useEffect(() => {\n    receiveMessage().subscribe(event => {\n      if (event.name === 'spaceChange') {\n        setAsset(event.data);\n      }\n    });\n  }, []);\n\n  const httpLink = createHttpLink({\n    uri: process.env.REACT_APP_GRAPHQL_URL,\n  });\n\n  const authLink = setContext((_, { headers }) => {\n    return {\n      headers: {\n        ...headers,\n        authorization: `${asset} ${authorization?.token}` || '',\n      },\n    };\n  });\n\n  const client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n  });\n\n  useEffect(() => {\n    props.getProfile();\n  }, []);\n\n  return (\n    <ApolloProvider client={client}>\n      <div\n        className={`App ${props.profile.theme} ${props.profile.textSize} ${props.profile.themeColor}`}\n      >\n        <HashRouter>\n          <div className=\"body\">\n            <div className=\"body-content\">\n              <Notification />\n              <MuiThemeProvider theme={themes.themecolor1}>\n                <div className=\"body-content--container\">\n                  <Navigation {...props} />\n                  <div className=\"body-content--container--content\">\n                    <Route\n                      path=\"/home\"\n                      render={propsLocal => (\n                        <OakRouteGraph\n                          {...propsLocal}\n                          {...props}\n                          component={Home}\n                        />\n                      )}\n                    />\n                    <Route\n                      path=\"/\"\n                      render={propsLocal => (\n                        <OakRouteGraph\n                          {...propsLocal}\n                          {...props}\n                          component={Home}\n                        />\n                      )}\n                    />\n                  </div>\n                </div>\n              </MuiThemeProvider>\n            </div>\n          </div>\n        </HashRouter>\n      </div>\n    </ApolloProvider>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  user: state.user,\n  profile: state.profile, // ,\n  //   event: state.event\n});\n\nexport default connect(mapStateToProps, {\n  getProfile,\n  setProfile,\n  getUser,\n  addUser,\n})(withCookies(Content));\n","import { GET_USER, ADD_USER, FETCH_ALL_USERS } from './types';\nimport { httpGet, httpPut } from '../components/Lib/RestTemplate';\nimport { sendMessage } from '../events/MessageService';\nimport constants from '../components/Constants';\n\nconst domain = 'user';\n\nexport const getUser = () => dispatch => {\n  dispatch({\n    type: GET_USER,\n  });\n};\n\nexport const addUser = data => dispatch => {\n  dispatch({\n    type: ADD_USER,\n    payload: data,\n  });\n};\n\nexport const fetchAllUsers = (tenant, authorization) => dispatch => {\n  httpGet(`${constants.API_URL_USER}/${tenant}/all`, {\n    headers: {\n      Authorization: authorization.token,\n    },\n  }).then(response => {\n    dispatch({\n      type: FETCH_ALL_USERS,\n      payload: { users: response.data.data },\n    });\n  });\n};\n\nexport const saveUser = (tenant, authorization, payload) => dispatch => {\n  httpPut(`${constants.API_URL_USER}/${tenant}/`, payload, {\n    headers: {\n      Authorization: authorization.token,\n    },\n  })\n    .then(response => {\n      if (response.status === 200) {\n        sendMessage(domain, true, {\n          action: payload.id ? 'updated' : 'created',\n        });\n        dispatch(fetchAllUsers(tenant, authorization));\n      }\n    })\n    .catch(error => {\n      if (error.response.status === 401) {\n        sendMessage('session expired');\n      }\n    });\n};\n","import React from 'react';\nimport cookie from 'react-cookie';\nimport { Provider } from 'react-redux';\nimport store from '../../store';\nimport './style.scss';\nimport './metric.scss';\nimport Content from './Content';\n\nconst App = props => {\n  return (\n    <Provider store={store}>\n      <Content {...props} />\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { CookiesProvider } from 'react-cookie';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/turl_white.62772b75.svg\";","module.exports = __webpack_public_path__ + \"static/media/turl_black.24c84967.svg\";"],"sourceRoot":""}